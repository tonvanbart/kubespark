---
# service definition.
# this service will select any pod that has a label service=kubespark-service.
# the service targets port 4567 and exposes itself on port 30569.
apiVersion: v1
kind: Service
metadata:
  name: secret
  namespace: default
spec:
  selector:
    service: secret-service
  ports:
  - port: 4567
    targetPort: 4567
    nodePort: 30569
  # there is no external load balancer, but this type will create a NodePort as well.
  type: LoadBalancer

---
# deployment definition for the pods.
# Pods in this deployment get the label service=kubespark-service.
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: example-secret
#  labels:
#    serviceType: kubespark-app
spec:
  replicas: 1
  template:
    metadata:
      name: kubespark
      labels:
        # this label is used by the Service to select the pods
        service: secret-service
    spec:
      containers:
      - name: kubespark
        image: kubespark:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 4567
        # mount the volume called 'application-config' on the path '/config'.
        volumeMounts:
        - name: application-config
          mountPath: "/config"
          readOnly: true
        # set an environment variable pointing to where the config data ended up.
        env:
        - name: CONFIGLOC
          value: /config/encoded.json

      # define a volume named 'application-config' and point it to the secret called secret-greet-config.
      # any keys in the secret will become files in the volume.
      volumes:
      - name: application-config
        secret:
          secretName: secret-greet-config

---
apiVersion: v1
kind: Secret
metadata:
  name: secret-greet-config
type: Opaque
data:
  # note: keys in the secret become file names under the mount point
  encoded.json: eyJncmVldGluZyI6Ik9vb28sIGEgdmVyeSBzZWNyZXQgZ3JlZXRpbmcuIn0=